# Generated by Django 2.1.5 on 2019-02-09 01:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registro', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alimentacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.DateField(auto_now_add=True)),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Cultivo')),
            ],
        ),
        migrations.CreateModel(
            name='Calidad_agua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oxigeno', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Oxígeno mg/l')),
                ('temperatura', models.DecimalField(decimal_places=1, max_digits=4, validators=[django.core.validators.MinValueValidator(-10), django.core.validators.MaxValueValidator(100)], verbose_name='Temperatura °C')),
                ('dureza', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('ph', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)])),
                ('amonio', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('nitritos', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('nitratos', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('co2', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('responsable', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_update', models.DateTimeField(auto_now=True)),
                ('estanque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Estanque')),
            ],
        ),
        migrations.CreateModel(
            name='Mortalidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peces_muertos', models.PositiveSmallIntegerField(default=0)),
                ('responsable', models.CharField(max_length=100, verbose_name='auth.User')),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_update', models.DateTimeField(auto_now=True)),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Cultivo')),
            ],
        ),
        migrations.CreateModel(
            name='Muestreo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('talla_promedio_cm', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('peso_promedio_gr', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('porcentaje_aj', models.DecimalField(decimal_places=1, default=1.5, max_digits=6)),
                ('ajuste_dieta', models.PositiveSmallIntegerField()),
                ('ganancia_diaria_peso', models.DecimalField(decimal_places=2, max_digits=6)),
                ('observaciones', models.TextField()),
                ('responsable', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_update', models.DateTimeField(auto_now=True)),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Cultivo')),
            ],
        ),
        migrations.CreateModel(
            name='Racion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_gr', models.PositiveSmallIntegerField()),
                ('tipo_concentrado', models.CharField(max_length=100)),
                ('responsable', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_update', models.DateTimeField(auto_now=True)),
                ('alimentacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Alimentacion')),
            ],
        ),
        migrations.CreateModel(
            name='Rangos_calidad_agua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_oxigeno', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Oxígeno')),
                ('min_oxigeno', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Oxígeno')),
                ('max_temperatura', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(-10), django.core.validators.MaxValueValidator(100)])),
                ('min_temperatura', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(-10), django.core.validators.MaxValueValidator(100)])),
                ('max_ph', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)])),
                ('min_ph', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)])),
                ('max_amonio', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('min_amonio', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('max_nitritos', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('min_nitritos', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('max_nitratos', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('min_nitratos', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('finca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Finca')),
            ],
        ),
    ]
